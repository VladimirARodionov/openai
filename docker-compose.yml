version: '3.8'
services:
  couchbase:
    build:
      dockerfile: Dockerfile_couchbase
    ports:
      - "${COUCHBASE_HTTP_PORT}:8091"
    volumes:
      - couchbase_data:/opt/couchbase/var
      - couchbase_init:/opt/couchbase/init_done
      - ./backups:/opt/couchbase/backup
    restart: always
    env_file:
      - .env
    environment:
      - COUCHBASE_BUCKET=vector_store
      - COUCHBASE_BUCKET_RAMSIZE=512
      - TZ=${TZ}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8091"]
      interval: 30s
      timeout: 30s
      retries: 5
  postgres:
    build:
      dockerfile: Dockerfile_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGUSER=${POSTGRES_USER}
      - WEBDAV_LOGIN=${WEBDAV_LOGIN}
      - WEBDAV_PASSWORD=${WEBDAV_PASSWORD}
      - WEBDAV_URL=${WEBDAV_URL}
      - TZ=${TZ}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pg_backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  openaiapp :
    build:
      dockerfile: Dockerfile_app
    env_file:
      - .env
    environment:
      - TZ=${TZ}
    volumes:
      - ./logs:/app/logs
      - ./load:/app/load
      - ./templates:/app/templates
      - appdb_data:/app/appdb
    restart: always
    depends_on:
      couchbase:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  couchbase_data:
  couchbase_init:
  appdb_data:
  postgres_data: